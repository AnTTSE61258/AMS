@using AMS.Constant
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "CreateAutomationReceipt";
    Layout = "~/Views/Management/__ManagementLayout.cshtml";


    List<UtilServiceForHouseCat> waterSevices = ViewBag.waterService;
    UtilServiceForHouseCat fixedCost = ViewBag.fixedCost;
    Receipt receipt = ViewBag.automationReceipt;
    int groupStatus = ViewBag.groupStatus;

}

<div class="col-md-12">
    <div class="panel panel-default">

        <div class="heading-tab">
            <span class="tab-location"><i class="fa fa-sitemap" aria-hidden="true"></i> Cập nhật hóa đơn</span>
            <ul class="nav nav-tabs pull-right" role="tablist">
                <li class="active">
                    <a href="/Management/ManageReceipt/View"><i class="fa fa-file-text-o"></i> Quản lý hóa đơn</a>
                </li>
                <li class="">
                    <a href="/Management/ManageReceipt/CreateManualReceiptView"><i class="fa fa fa-plus"></i> Tạo hóa đơn thủ công</a>
                </li>
                <li>
                    <a href="/Management/ManageReceipt/CreateAutomationReceiptView"><i class="fa fa fa-plus"></i> Tạo hóa đơn tự động</a>
                </li>
                <li class="">
                    <a href="/Management/ManageReceipt/ViewDownloadRecordTemplate"><i class="fa fa-cloud-download"></i> Tải bảng ghi nước</a>
                </li>
            </ul>
        </div>

        <div class="panel-body">
            <form id="addUtilServiceForm" class="form-horizontal" role="form">
                <div class="tab-content">
                    <div class="tab-pane fade active in" id="">

                        <div class="alert alert-danger" id="failedPublishOrderNotify" style="display: none">
                            <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                            <span>Công bố hóa đơn thất bại.</span>
                        </div>

                        <div class="form-group">
                            <div class="pull-right">
                                @{
                                    if (receipt.Status == SLIM_CONFIG.RECEIPT_STATUS_UNPUBLISHED)
                                    {
                                        <span id="btnEdit" class="btn btn-default" onclick="editAutomationReceiptHeader(@receipt.CreateDate.Value.Ticks)"><i class="fa fa-edit"></i> Chỉnh sửa</span>
                                        <span id="btnPublish" class="btn btn-default" onclick="publishOrder(@receipt.CreateDate.Value.Ticks)"><i class="fa fa-paragraph"></i> Công bố</span>
                                        <span id="btnDel" class="btn btn-danger" onclick="deleteOrder(@receipt.CreateDate.Value.Ticks)"><i class="fa fa-times"></i> Xóa</span>
                                    }
                                }
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-6">
                                <fieldset class="scheduler-border less-padding">
                                    <legend class="scheduler-border bold-black" style="margin-bottom: 30px;"> Thông tin hóa đơn</legend>
                                    <div class="form-group">
                                        <label for="serviceTypeName" class="col-md-2 control-label">Tiêu đề</label>
                                        <div class="col-md-10">
                                            <input id="receiptTitle" value="@receipt.Title" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label el class="col-md-2 control-label">Tháng</label>
                                        <div class="col-md-4">
                                            <input type="text" readonly="readonly" value="@receipt.BalanceSheet.StartDate.Value.ToString(AmsConstants.MonthYearFormat)" class="form-control" />
                                            <input type="hidden" id="blsId" value="@receipt.BalanceSheet.Id" name="ForMonth" class="form-control" />
                                        </div>
                                        <label for="serviceTypeName" class="col-md-2 control-label">Trạng thái</label>
                                        <div class="col-md-4">
                                            @{
                                                if (groupStatus == SLIM_CONFIG.RECEIPT_STATUS_UNPUBLISHED)
                                                {
                                                    <span id="receiptStatusUnpublish" class="btn btn-inverse  btn-sm  ">Chưa công bố</span>
                                                    <span id="receiptStatusPaid" class="btn btn-success  btn-sm  hide">Đã thanh toán</span>
                                                    <span id="receiptStatusUnpaid" class="btn btn-danger btn-sm  hide">Chưa thanh toán</span>
                                                }
                                                else if (groupStatus == SLIM_CONFIG.RECEIPT_STATUS_PAID)
                                                {
                                                    <span id="receiptStatusUnpublish" class="btn btn-inverse  btn-sm  hide">Chưa công bố</span>
                                                    <span id="receiptStatusPaid" class="btn btn-success  btn-sm ">Đã thanh toán</span>
                                                    <span id="receiptStatusUnpaid" class="btn btn-danger btn-sm  hide">Chưa thanh toán</span>
                                                }
                                                else if (groupStatus == SLIM_CONFIG.RECEIPT_STATUS_UNPAID)
                                                {
                                                    <span id="receiptStatusUnpublish" class="btn btn-inverse btn-sm hide">Chưa công bố</span>
                                                    <span id="receiptStatusPaid" class="btn btn-success btn-sm  hide">Đã thanh toán</span>
                                                    <span id="receiptStatusUnpaid" class="btn btn-danger btn-sm  ">Chưa thanh toán</span>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="serviceTypeName" class="col-md-2 control-label">Ngày tạo</label>
                                        <div class="col-md-4">
                                            <input id="serviceTypeName" readonly="readonly" value="@receipt.CreateDate.Value.ToString(AmsConstants.DateFormat)" name="ServiceTypeName" type="text" class="form-control">
                                        </div>
                                        <label for="publishDate" class="col-md-2 control-label">Ngày xuất</label>
                                        <div class="col-md-4">
                                            <input id="publishDate" readonly="readonly" value="@receipt.PublishDate.Value.ToString(AmsConstants.DateFormat)" name="ServiceTypeName" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="serviceTypeName" class="col-md-2 control-label">Người tạo</label>
                                        <div class="col-md-10">
                                            <input id="creator" value="@receipt.User.Fullname" name="ServiceTypeName" type="text" class="form-control">
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label for="receiptDesc" class="col-md-2 control-label">Mô tả</label>
                                        <div class="col-md-10">
                                            <textarea id="receiptDesc" class="form-control" rows="3">@receipt.Description</textarea>
                                        </div>
                                    </div>
                                </fieldset>

                            </div>
                            <div class="col-md-6">
                                <div class="row">

                                    <fieldset class="scheduler-border less-padding">
                                        <legend class="scheduler-border bold-black">Giá nước</legend>

                                        <div class="row">
                                            <div class="table-responsive col-md-12">
                                                <table class="table v-middle table-bordered table-striped table-condensed ">
                                                    <thead>
                                                        <tr>
                                                            <th style="width: 40%" class="text-capitalize">Loại nhà</th>
                                                            <th style="width: 60%" class="text-capitalize text-center">
                                                                Tên giá
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody>
                                                        @{

                                                            for (int i = 0; i < waterSevices.Count; i++)
                                                            {
                                                                var water = waterSevices[i];
                                                                <tr>
                                                                    <td>@water.HouseCategory.Name</td>
                                                                    <td>@water.UtilityService.Name</td>
                                                                </tr>
                                                            }
                                                        }
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>
                                <div class="form-group">
                                    <fieldset class="scheduler-border less-padding">
                                        <legend class="scheduler-border bold-black">Phí cố định</legend>

                                        <label class="col-md-2 control-label">Tên</label>
                                        <div class="col-md-10">
                                            <input class="form-control" value="@(fixedCost.UtilityService == null ? "Chưa thiết lập" : fixedCost.UtilityService.Name)" type="text" />
                                        </div>
                                    </fieldset>
                                </div>

                            </div>
                        </div>
                        <div class="form-group">

                            <table id="autoReceiptTbl" class="table table-hover table-bordered">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Căn hộ</th>
                                        <th>Từ số</th>
                                        <th>Đến số</th>
                                        <th>Tổng</th>
                                        <th>Tiền điện</th>
                                        <th>Phí cố định</th>
                                        <th>Tổng hóa đơn</th>
                                        <th>Trạng thái</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tfoot>
                                    <tr>
                                        <th>#</th>
                                        <th>Căn hộ</th>
                                        <th>Từ số</th>
                                        <th>Đến số</th>
                                        <th>Tổng</th>
                                        <th>Tiền điện</th>
                                        <th>Phí cố định</th>
                                        <th>Tổng hóa đơn</th>
                                        <th>Trạng thái</th>
                                        <th></th>
                                    </tr>
                                </tfoot>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="editHouseConsumptionModal" class="modal fade ams-modal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Cập nhật số lượng sử dụng</h4>
            </div>
            <div class="modal-body">
                <div class="panel-body">

                    <div class="alert alert-info" id="successAddTransTypeNotify" style="display: none">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <span>Cập nhật thành công.</span>
                    </div>
                    <div class="alert alert-danger" id="failedAddTransTypeNotify" style="display: none">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <span>Cập nhật thất bại.</span>
                    </div>

                    <form id="editHouseConsumptionForm" class="form-horizontal" role="form">
                        <div class="form-group">
                            <label for="houseConsumptHouseName" class="col-md-3 control-label">Căn hộ </label>
                            <div class="col-md-2">
                                <span id="houseConsumptBlock" class="btn btn-sm date-color btn-block"></span>
                            </div>
                            <div class="col-md-2">
                                <span id="houseConsumptFloor" class="btn btn-sm time-color btn-block"></span>
                            </div>
                            <div class="col-md-2">
                                <span id="houseConsumptHouseName" class="btn btn-sm house-color btn-block"></span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="paymentDate" class="col-md-3 control-label">Ngày thanh toán</label>
                            <div class="col-md-4">
                                <input id="paymentDate" type="text" class="form-control" value="">
                            </div>
                            <span id="unpublished" class="btn btn-inverse hide">Chưa công bố</span>
                            <span id="paid" class="btn btn-success hide">Đã thanh toán</span>
                            <span id="unpaid" class="btn btn-danger hide">Chưa thanh toán</span>
                        </div>
                        <div class="form-group">
                            <label for="houseConsumptWater" class="col-md-3 control-label">Số nước </label>
                            <div class="input-group col-md-7">
                                <input id="fromNumber" readonly="readonly" type="text" class="form-control" value="">
                                <span class="input-group-addon"><i class="fa fa-arrow-right"></i></span>
                                <input id="toNumber" type="text" class="form-control" value="">
                                <span class="input-group-addon">
                                    <strong id="houseConsumptWater">20</strong> Khối
                                </span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="waterCost" class="col-md-3 control-label">Tiền nước</label>
                            <div class="input-group col-md-7">
                                <input id="waterCost" readonly="readonly" type="text" class="form-control" value="">
                                <span class="input-group-addon">đồng</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Phí cố định </label>
                            <div class="input-group col-md-7">
                                <input id="monthlyFixedCost" type="text" class="form-control" value="">
                                <span class="input-group-addon">đồng</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-3 control-label">Tổng </label>
                            <div class="input-group col-md-7">
                                <input id="monthlyTotal" type="text" readonly="readonly" class="form-control" value="">
                                <span class="input-group-addon">đồng</span>
                            </div>
                        </div>
                        <input type="hidden" id="receiptId" />
                        <input type="hidden" id="rowId" />
                    </form>
                </div>
            </div>
            <div class="modal-footer" style="margin-top: 0">
                <span id="btnPurchaseReceipt" onclick="purchaseReceipt()" class="btn btn-info hide">Thanh toán</span>
                <span id="btnEditUtilityServiceQuantity" onclick="updateHouseConsumption()" class="btn btn-info hide">Cập nhật</span>
            </div>
        </div>
    </div>
</div>

<div id="editAutomationReceiptHeaderModal" class="modal fade ams-modal" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 id="hdSrvModalTitle" class="modal-title">Cập nhật thông tin hóa đơn</h4>
            </div>
            <div class="modal-body">
                <div class="panel-body">

                    <div class="alert alert-info" id="successUpdateOrderTypeNotify" style="display: none">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <span>Cập nhật thành công.</span>
                    </div>
                    <div class="alert alert-danger" id="failedpdateOrderTypeNotify" style="display: none">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <span>Cập nhật thất bại.</span>
                    </div>
                    <div class="alert alert-danger" id="orderIsExistedNotify" style="display: none">
                        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                        <span>Hóa đơn tháng <strong id="forMonthMsg"></strong> đã được tạo</span>
                    </div>

                    <form id="updateHouseConsumptionForm" class="form-horizontal" role="form">
                        <div class="form-group">
                            <label for="autoReceiptTitle" class="col-md-3 control-label">Tiêu đề </label>
                            <div class="col-md-9">
                                <input id="autoReceiptTitle" name="Title" type="text" class="form-control" value="">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="autoReceiptTitle" class="col-md-3 control-label">Tháng</label>
                            <div class="col-md-5">
                                <input type="text" id="autoReceiptForMonth" readonly="readonly" value="@receipt.BalanceSheet.StartDate.Value.ToString(AmsConstants.MonthYearFormat)" class="form-control" />
                                <input type="hidden" id="autoReceiptBlsId" name="BalanceSheetId" />
                            </div>
                            <div class="col-md-4">
                                <span id="autoReceiptunPublished" class="btn btn-inverse hide">Chưa công bố</span>
                                <span id="autoReceiptPaid" class="btn btn-success hide">Đã thanh toán</span>
                                <span id="autoReceiptUnpaid" class="btn btn-danger hide">Chưa thanh toán</span>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="autoReceiptPublishmentDate" class="col-md-3 control-label">Ngày xuất</label>
                            <div class="col-md-5">
                                <input type="text" id="autoReceiptPublishmentDate" name="PublishDate" class="form-control" data-date-format="dd-mm-yyyy" data-date-language="vi"
                                       data-date-min-view-mode="0" data-date-today-highlight="true" data-date-start-date="0m" />
                            </div>

                        </div>
                        <div class="form-group">
                            <label for="autoReceiptDesc" class="col-md-3 control-label">Mô tả</label>
                            <div class="col-md-9">
                                <textarea id="autoReceiptDesc" name="Description" class="form-control" rows="3"></textarea>
                            </div>
                        </div>
                        <input type="hidden" name="ReceiptId" id="autoReceiptReceiptId" value="@receipt.CreateDate.Value.Ticks" />
                    </form>
                </div>
            </div>
            <div class="modal-footer" style="margin-top: 0">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <span onclick="updateAutomationReceiptHeader(@receipt.CreateDate.Value.Ticks)" class="btn btn-info">Chấp nhận</span>
            </div>
        </div>
    </div>
</div>


<div id="confirmDeleteOrderModal" class="modal fade ams-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel">Xác nhận Xóa hóa đơn</h4>
            </div>
            <div class="modal-body">
                <p>
                    Bạn có chắc chắn muốn xóa hóa đơn <b><i class="title" id="delReceiptTitle"></i></b> không ?
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Hủy</button>
                <button id="delBtn" type="button" class="btn btn-danger btn-ok" data-receipt-id="@receipt.CreateDate.Value.Ticks">Xóa</button>
            </div>
        </div>
    </div>
</div>

<script>
    $("documemt").ready(function () {
        window.houseConsumptionList = [];
        window.deleteConsumptionRecordList = [];
        window.deleteConsumptionRecordElementList = [];
        $("#publishDate").datepicker();
        $("#forMonth").datepicker();

        window.autoReceiptTbl = $("#autoReceiptTbl").DataTable({
            "ajax": {
                url: "/Management/ManageReceipt/GetBatchReceiptList?receiptId=" + "@receipt.CreateDate.Value.Ticks",
                dataSrc: function (data) {

                    var unpublished = $("#receiptStatusUnpublish");
                    var paid = $("#receiptStatusPaid");
                    var unpaid = $("#receiptStatusUnpaid");
                    if (data.status === window.StatusUnpublished) {
                        unpublished.removeClass("hide");
                        paid.addClass("hide");
                        unpaid.addClass("hide");
                    } else if (data.status === window.StatusUnpaid) {
                        unpaid.removeClass("hide");
                        unpublished.addClass("hide");
                        paid.addClass("hide");
                    } else if (data.status === window.StatusPaid) {
                        paid.removeClass("hide");
                        unpublished.addClass("hide");
                        unpaid.addClass("hide");
                    }

                    $("#receiptTitle").val(data.title);
                    $("#receiptDesc").text(data.description);
                    $("#publishDate").val(data.publishDate);
                    $("#forMonth").val(data.forMonth);
                    $("#blsId").val(data.blsId);

                    $("#water").val(data.waterName);
                    $("#fixedCost").val(data.fixedCostName);

                    window.houseConsumptionList = data.data;
                    return data.data;
                }
            },
            "order": [["1", "asc"]],
            "bLengthChange": false,
            "bInfo": false,
            "columns": [
                { data: "HouseName" },
                { data: "HouseName" },
                { data: "FromNumber" },
                { data: "ToNumber" },
                { data: "Water" },
                { data: "WaterCost" },
                { data: "FixedCost" },
                { data: "Total" },
                { data: "Status" },
                { data: "ReceiptId" }
            ],
            "drawCallback": function (settings) {
                var deleteBtn =
            "<div class='hide' id='delConsumptionRecordBtnGroup'>" +
                "<span class='btn btn-warning btn-stroke' onclick='cancelDeleteConsumptionRecord()'>" +
                    "<i class='fa fa-plus'></i> Hủy" +
                "</span>" +
                "<span class='btn btn-primary' style='margin-left: 5px' onclick='commitDeleteConsumptionRecord()'>" +
                    "<i class='fa fa-plus'></i> Chấp nhận" +
                "</span>" +
            "</div>";
                $("#autoReceiptTbl_wrapper > div.row:nth-child(3) > div:nth-child(1) ").html(deleteBtn);
            },
            "columnDefs": [
            {
                "searchable": false,
                "orderable": false,
                "targets": 0
            },

            {
                "targets": 1,
                "data": "HouseName",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return "<span class='label date-color' style='margin-right: 5px'>" + full.Block + "</span>" +
                            "<span class='label time-color' style='margin-right: 5px'>" + full.Floor + "</span>" +
                            "<span class='label room-color' >" + full.HouseName + "</span>";
                    }
                    return data;
                }
            },
            {
                "targets": 2,
                "data": "FromNumber",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return numberWithSpace(data);
                    }
                    return data;
                }
            },
            {
                "targets": 3,
                "data": "ToNumber",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return numberWithSpace(data);
                    }
                    return data;
                }
            },
            {
                "targets": 4,
                "data": "Water",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return numberWithSpace(data);
                    }
                    return data;
                }
            },
            {
                "targets": 5,
                "data": "WaterCost",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return numberWithCommas(data);
                    }
                    return data;
                }
            },
            {
                "targets": 6,
                "data": "FixedCost",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return numberWithCommas(data);
                    }
                    return data;
                }
            }, {
                "targets": 7,
                "data": "Total",
                "render": function (data, type, full, meta) {
                    if (type === "display" || type === "filter") {
                        return numberWithCommas(data);
                    }
                    return data;
                }
            },
            {
                "targets": 8,
                "data": "Status",
                "render": function (data, type, full) {
                    if (type === "display" || type === "filter") {
                        if (data === window.StatusUnpaid) {
                            return "<span class='label label-danger'> Chưa thanh toán</div>";
                        } else if (data === window.StatusPaid) {
                            return "<span class='label label-success'>" + "Đã thanh toán" + "</div>";
                        } else if (data === window.StatusUnpublished) {
                            return "<span class='label label-default'>" + "Chưa công bố" + "</div>";
                        }
                    }
                    return data;
                }
            },
             {
                 "targets": 9,
                 "width":"8%",
                 "data": "ReceiptId",
                 "render": function (data, type, full) {
                     if (type === "display" || type === "filter") {
                         if (data !== null && data !== undefined) {
                             if (full.Status === window.StatusUnpaid) {
                                 return "<div class='text-right'>" +
                                         "<span onclick='viewMonthlyReceiptDetail(\"" + data + "\",\"" + full.DT_RowId + "\")' class='btn btn-default btn-xs lbl-margin-right'>" +
                                             "<i class='fa fa-pencil'></i>" +
                                         "</span> " +
                                     "</div>";
                             } else if (full.Status === window.StatusPaid) {
                                 return "<div class='text-right'>" +
                                        "<span onclick='viewMonthlyReceiptDetail(\"" + data + "\",\"" + full.DT_RowId + "\")' class='btn btn-default btn-xs lbl-margin-right'>" +
                                            "<i class='fa fa-info'></i>" +
                                        "</span> " +
                                    "</div>";
                             } else if (full.Status === window.StatusUnpublished) {
                                 return "<div class='text-right'>" +
                                         "<span onclick='viewMonthlyReceiptDetail(\"" + data + "\",\"" + full.DT_RowId + "\")' class='btn btn-default btn-xs lbl-margin-right'>" +
                                             "<i class='fa fa-pencil'></i>" +
                                         "</span> " +
                                      "</span>"
                                        + " <span onclick='deleteConsumptionRecord(" + data + ")' class='btn btn-danger btn-xs' >"
                                        + "  <i class='fa fa-times'></i>"
                                        + " </span>"
                                   + "</div>";
                             }
                         }
                     }
                     return data;
                 }
             }
            ]
        });
        generateTableIndex(window.autoReceiptTbl);

        $("#toNumber").on("keyup", function (event) {
            if (event.which >= 37 && event.which <= 40) {
                event.preventDefault();
            }
            if (event.currentTarget.value) {
                var $this = $(this);
                var fromValue = $("#fromNumber").val();
                fromValue = replaceSpaceNumber(fromValue);
                var toValue = $this.val();
                toValue = replaceSpaceNumber(toValue);
                if (!isNaN(toValue) && parseInt(toValue, 10) >= 0) {
                    var quantity = parseInt(toValue) - parseInt(fromValue);
                    var waterCost = waterAggressiveCalculating(quantity, window.waterRangePrices);
                    var fixedCost = parseInt(replaceCommaNumber($("#monthlyFixedCost").val()));
                    $("#houseConsumptWater").text(numberWithCommas(quantity));
                    $("#waterCost").val(numberWithCommas(waterCost));
                    $("#monthlyTotal").val(numberWithCommas(waterCost + fixedCost));
                } else {
                    $this.val("");
                    $("#houseConsumptWater").text("0");
                }
            } else {
                var fixedCost = parseInt(replaceCommaNumber($("#monthlyFixedCost").val()));
                $("#houseConsumptWater").text(0);
                $("#waterCost").val(0);
                $("#monthlyTotal").val(numberWithCommas(fixedCost));
            }

        });
    });

    function viewMonthlyReceiptDetail(id, rowId) {
        $.ajax({
            url: "/Management/ManageReceipt/GetMonthLyReceiptDetai",
            data: {
                receiptId: id
            },
            type: "GET",
            success: function (data) {
                if (data.StatusCode === 0) {
                    var obj = data.Data;
                    $("#houseConsumptBlock").text(obj.Block);
                    $("#houseConsumptFloor").text(obj.Floor);
                    $("#houseConsumptHouseName").text(obj.HouseName);
                    $("#houseConsumptWater").text(obj.Water);
                    $("#fromNumber").val(numberWithSpace(obj.FromNumber));
                    $("#toNumber").val(numberWithSpace(obj.ToNumber));
                    $("#waterCost").val(numberWithCommas(obj.WaterCost));
                    $("#monthlyFixedCost").val(numberWithCommas(obj.FixedCost));
                    $("#monthlyTotal").val(numberWithCommas(obj.Total));
                    $("#receiptId").val(obj.ReceiptId);
                    $("#paymentDate").val(obj.PaymentDate);

                    $("#rowId").val(rowId);

                    window.waterRangePrices = obj.WaterRangePrices;

                    var unpublished = $("#unpublished").addClass("hide");
                    var paid = $("#paid").addClass("hide");
                    var unpaid = $("#unpaid").addClass("hide");
                    if (obj.Status === window.StatusUnpublished) {
                        unpublished.removeClass("hide");
                        $("#btnEditUtilityServiceQuantity").removeClass("hide");
                        $("#btnPurchaseReceipt").addClass("hide");

                        $("#houseConsumptWater").prop("readonly", false);
                    } else if (obj.Status === window.StatusUnpaid) {
                        unpaid.removeClass("hide");
                        $("#btnPurchaseReceipt").removeClass("hide");
                        $("#btnEditUtilityServiceQuantity").addClass("hide");

                        $("#houseConsumptWater").prop("readonly", true);
                    } else if (obj.Status === window.StatusPaid) {
                        paid.removeClass("hide");
                        $("#houseConsumptWater").prop("readonly", true);
                    }
                    $("#editHouseConsumptionModal").modal("show");
                }
            }
        });
    }

    function editAutomationReceiptHeader(id) {
        $.ajax({
            url: "/Management/ManageReceipt/ViewBatchReceiptDetail",
            data: {
                receiptId: id
            },
            type: "GET",
            success: function (data) {
                var object = data.Data;
                //                var water = object.Water;
                //                var houseRent = object.HouseRent;
                //                var fixedCost = object.FixedCost;

                $("#autoReceiptTitle").val(object.Title);
                $("#autoReceiptPublishmentDate").datepicker();
                $("#autoReceiptPublishmentDate").val(object.PublishDate);
                $("#autoReceiptDesc").val(object.Description);
                $("#autoReceiptReceiptId").text(object.ReceiptId);
                $("#autoReceiptForMonth").val(object.ForMonth);
                $("#autoReceiptBlsId").val(object.BalanceSheetId);

                //                $("#autoReceiptWater").html(parseJsonToSelectTags(water,receiptInfo.WaterUtilServiceId));
                //                $("#autoReceiptFixedCost").html(parseJsonToSelectTags(fixedCost,receiptInfo.FixCostUtilServiceId));


                var unpublished = $("#autoReceiptunPublished").addClass("hide");
                var paid = $("#autoReceiptPaid").addClass("hide");
                var unpaid = $("#autoReceiptUnpaid").addClass("hide");
                if (object.Status === window.StatusUnpublished) {
                    unpublished.removeClass("hide");
                } else if (object.Status === window.StatusUnpaid) {
                    unpaid.removeClass("hide");
                } else if (object.Status === window.StatusPaid) {
                    paid.removeClass("hide");
                }
                $("#editAutomationReceiptHeaderModal").modal("show");
            },
            error: function () {
            }

        });
    }
    function updateAutomationReceiptHeader(id) {
        $.ajax({
            url: "/Management/ManageReceipt/UpdateAutomationReceipt",
            data: $("#updateHouseConsumptionForm").serialize(),
            type: "POST",
            success: function (data) {
                if (data.StatusCode === 0) {
                    window.autoReceiptTbl.ajax.reload(null, false);
                    $("#successUpdateOrderTypeNotify").fadeIn("fast");
                    resetFormData("updateHouseConsumptionForm");
                    setTimeout(function () {
                        var element =
                            $("#confirmDeleteOrderModal > div > div > div.modal-body");
                        $("#successUpdateOrderTypeNotify").fadeOut("fast");
                        $("#editAutomationReceiptHeaderModal").modal("hide");
                    }, 3000);
                } else if (data.StatusCode === 2) {
                    $("#forMonthMsg").text($("#autoRseceiptForMonth").val());
                    $("#orderIsExistedNotify").fadeIn("fast");
                    setTimeout(function () {
                        $("#orderIsExistedNotify").fadeOut("fast");
                    },
                        3000);
                } else {
                    $("#failedpdateOrderTypeNotify").fadeIn("fast");
                    setTimeout(function () {
                        $("#failedpdateOrderTypeNotify").fadeOut("fast");
                    }, 3000);
                }
            }
        });
    }
    function updateStatus(id, mode, callback) {
        $.ajax({
            url: "/Management/ManageReceipt/UpdateAutomationReceiptStatus",
            type: "POST",
            data: {
                receiptId: id,
                mode: mode
            },
            success: function (data) {
                callback(data);
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
    function publishOrder(id) {
        updateStatus(id, window.Mode_Publish, function (data) {
            if (data.StatusCode === 0) {
                window.autoReceiptTbl.ajax.reload(null, false);
                $("#btnEdit").addClass("hide");
                $("#btnPublish").addClass("hide");
                $("#btnDel").addClass("hide");
            } else {
                $("#failedPublishOrderNotify").fadeIn("fast");
            }
        });
    }
    function deleteOrder() {
        $("#delReceiptTitle").text($("#receiptTitle").val());
        $("#delBtn").on("click", function (e) {
            var elementData = $(this).data();
            $("#confirmDeleteOrderModal").addClass("loading");
            updateStatus(elementData.receiptId, window.Mode_Delete, function (data) {
                $("#confirmDeleteOrderModal").removeClass("loading");
                if (data.StatusCode === 0) {
                    $("#confirmDeleteOrderModal > div > div > div.modal-body > p").text("Xóa hóa đơn thành công. Đang chuyển về trang quản lý hóa đơn.");

                } else {
                    $("#confirmDeleteOrderModal > div > div > div.modal-body > p").text("Xóa hóa đơn thất bại. Đang chuyển về trang quản lý hóa đơn.");
                }
                setTimeout(function () {
                    location.href = "/Management/ManageReceipt/View";
                }, 2000);
            });

        });
        $("#confirmDeleteOrderModal").modal("show");

    }
    function purchaseReceipt() {
        var id = $("#receiptId").val();
        $.ajax({
            url: "/Management/ManageReceipt/UpdateStatus",
            type: "Get",
            data: {
                ReceiptId: id,
                Status: window.StatusPaid
            },
            success: function (data) {
                if (data.Data.paymentDate !== undefined) {
                    window.autoReceiptTbl.ajax.reload(null, false);
                    $("#btnPurchaseReceipt").addClass("hide");
                    //                    var rowId = $("#rowId").val();
                    //                    $("#" + rowId + " > td:nth-child(9)").html("<span class='label label-success'>" + "Đã thanh toán" + "</div>");
                    $("#paid").removeClass("hide");
                    $("#unpaid").addClass("hide");
                    $("#paymentDate").val(data.Data.paymentDate);
                    $("#successAddTransTypeNotify").fadeIn("fast");
                    setTimeout(function () {
                        $("#successAddTransTypeNotify").fadeOut("fast");
                        $("#editHouseConsumptionModal").modal("hide");
                    }, 3000);
                }
            }
        });
    }
    function updateHouseConsumption() {
        var id = $("#receiptId").val();
        var toNumber = $("#toNumber").val();
        $.ajax({
            url: "/Management/ManageReceipt/UpdateHouseConsumption",
            type: "Post",
            data: {
                ReceiptId: id,
                ToNumber: toNumber
            },
            success: function (data) {
                if (data.StatusCode === 0) {
                    window.autoReceiptTbl.ajax.reload(null, false);
                    $("#successAddTransTypeNotify").fadeIn("fast");
                    setTimeout(function () {
                        $("#successAddTransTypeNotify").fadeOut("fast");
                        $("#editHouseConsumptionModal").modal("hide");
                    }, 3000);
                } else {
                    $("#failedAddTransTypeNotify").fadeIn("fast");
                    setTimeout(function () {
                        $("#failedAddTransTypeNotify").fadeOut("fast");
                    }, 3000);
                }
            }
        });
    }

    function deleteConsumptionRecord(id) {
        //        var element = $("#receipt_id_" + id).addClass("hide");
        window.deleteConsumptionRecordList.push(id);
        window.autoReceiptTbl.row("#receipt_id_" + id).remove().draw(false);
        $("#delConsumptionRecordBtnGroup").removeClass("hide").addClass("show");
    }
    function cancelDeleteConsumptionRecord() {
        for (var i = 0; i < window.houseConsumptionList.length; i++) {
            var originItem = window.houseConsumptionList[i];
            for (var z = 0; z < window.deleteConsumptionRecordList.length; z++) {
                var deleteItem = window.deleteConsumptionRecordList[z];
                if (originItem.ReceiptId === deleteItem) {
                    window.autoReceiptTbl.row.add(originItem).draw();
                }
            }
        }
        window.deleteConsumptionRecordList = new Array();
        $("#delConsumptionRecordBtnGroup").removeClass("show").addClass("hide");;
    }
    function commitDeleteConsumptionRecord() {
        $.ajax({
            url: "/Management/ManageReceipt/DeleteHouseConsumption",
            type: "POST",
            data: {
                deleteItems: window.deleteConsumptionRecordList
            },
            success: function (data) {
                if (data.StatusCode === 0) {
                    $("#delConsumptionRecordBtnGroup").removeClass("show").addClass("hide");;
                    window.deleteConsumptionRecordList = new Array();
                    window.autoReceiptTbl.ajax.reload(null, false);
                    //                    window.autoReceiptTbl.ajax.reload();
                }
            }
        });
    }
</script>